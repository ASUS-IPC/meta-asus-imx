#!/bin/bash
CONFIG_PATH=/etc/lte
CONFIG_FILE=${CONFIG_PATH}/lte.conf
APN_LIST=${CONFIG_PATH}/apns-full.xml
NETWORK_NAME="Cellular"
TAG="LTE"
MODEM_SEARCH_RETRY=12
CONNECT_RETRY=5

log() {
	echo "${1}"
	logger -t ${TAG} ${1}
}

check_apn() {
	result=$(xmllint --xpath "string(//apn[@mcc=${1} and @mnc=${2}]/@apn)" ${APN_LIST})
	echo $result
}

# Load config and wait modem manager launchs
. $CONFIG_FILE
if [ "${AUTO_CONNECT}" != "y" ]; then
	log "auto connect not enabled"
	exit 1
fi
until mmcli -B; do
    log "waiting for modem manager"
    sleep 3
done

# Get modem
let count=0
until mmcli -L -K | grep 'modem-list.value'; do
	let count++
	log "no modem found ${count} / ${MODEM_SEARCH_RETRY}"
	if ((count == ${MODEM_SEARCH_RETRY})); then
		exit 1
	fi
	sleep 5
done
device=$(mmcli -L -K | grep 'modem-list.value' | awk -F ": " '{ print $2 }')
log "found modem=$(mmcli -m ${device} -K | grep 'modem.generic.model' | awk -F ": " '{ print $2 }')"

# Get SIM card
sim=$(mmcli -m ${device} -K | grep 'modem.generic.sim' | awk -F ": " '{ print $2 }')
if [ "${sim}" == "--" ]; then
	log "no sim found"
	exit 1
fi
sleep 3

# Get modem status
state=$(mmcli -m ${device} -K | grep 'modem.generic.state ' | awk -F ": " '{ print $2 }')
if [ "${state}" == "locked" ]; then
	log "pin locked"
	mmcli -i ${sim} --pin=${PIN}
	if [ "$?" != "0" ]; then
		log "pin error"
		exit 1
	else
		log "pin unlock success"
	fi
elif [ "${state}" == "--" ]; then
	log "state is unknown"
	exit 1
elif [ "${state}" == "connected" ]; then
	log "already connected"
	exit 1
else
	log "state is ${state}"
fi
sleep 3

# Get apn with imsi
imsi=$(mmcli -i ${sim} -K | grep 'sim.properties.operator-code' | awk -F ": " '{ print $2 }')
mcc=${imsi:0:3}
mnc=${imsi:3:2}
log "check apn with mcc=${mcc} and mnc=${mnc}"
apn=$(check_apn ${mcc} ${mnc})

if [ "${apn}" == "" ]; then
    log "no apn found"
    exit 1
else
	log "apn=${apn}"
fi

# Create connection with apn
nmcli c show | grep ${NETWORK_NAME}
if [ "${?}" == "0" ]; then
	log "delete previous connection setting ${NETWORK_NAME}"
	nmcli c delete ${NETWORK_NAME}
fi
sleep 1
log "create new connection setting ${NETWORK_NAME}"
nmcli c add type gsm con-name ${NETWORK_NAME} ifname '*' apn ${apn} autoconnect n

# Bring up connection
let count=0
until nmcli c up ${NETWORK_NAME}; do
	log "bring up network fail ${count}"
	if ((count > ${#RETRY_TIME[@]}-1)); then
		let count=${#RETRY_TIME[@]}-1
	fi
	next=`echo ${RETRY_TIME[$count]/,/} + $((RANDOM%${RETRY_RANDOM[$count]/,/})) | bc`
	log "retry after $next sec"
	sleep $next
	let count++
done

log "bring up network success, start keepalive service"
systemctl is-active mm_keepalive &> /dev/null
if [ "${?}" == "0" ]; then
	systemctl restart mm_keepalive
else
	systemctl start mm_keepalive
fi
exit 0
